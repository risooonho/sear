 * Update cally code to reuse core models 

* Allow console to be opened even if not key bindings have been loaded

 * Setup system to update values as varconf values update
  - Every object that uses a varconf object could connect a callback to the object.

 * Allow general varconf object to parse command line.

 * Convert Object Loader and State Loader to use varconf. Requires being able to specify an array in the config file. File format will use the state or object name as the section heading.

 * Add support for OpenGL extensions
 
 * Fix lighting
  - 3ds normals are wonky.
  - Check  whole system lighting model.
  
 * Add ability to specify search paths for default file locations 
  - This should be done by config files and/or command line args

 * Add ability to tokenise on quotes, not just spaces

 * Determine why some models are not properly rotated 
  - Might be how they come from the server so need to check this data

 * Allow line editing in console

 * In game menu for configuration

 * Improve memory usage
   - Unload unused textures, models, and other data.

 * Add a BSP tree or equivalent

 * Move OpenGL code into one object

 * Add a better GUI
   - First step is to add a gui_queue for rendering. This starts with the splash screen, then with anything else such as entity text
   - Finally render console.

 * Add collision detection
   - This can be as an addition to the BSP tree or equivalent code

 * Improve terrain engine
   - Include demetar?
   - Look in gamedev/flipcode for the possible additions to current terrain engine

 * Allow mulitple terrains
   - Allow us to load in new terrain settings on the fly

 * Add support to create custom font textures from say freetype

 * Add a sky dome
   - See flipcode skydome tutorial

 * Colour cursors
   Cursors are currently implemented using the SDL cursor methods. These are only in black and white, and the cursors are hard coded in cursors.h. Colour cursors can be easily implemented by rendering the cursor as a texture and hiding the real one. The trick is to get mouse position.
  SDL offers two ways. one is to use SDL_GetMouseState and the second is to store the position on every MOUSEMOTION event. However both of these methods do not offer sufficient update intervals to be of real use. We require either another way or need to increase the rate of updates.


 * Improve Sound/Music System
 Currently using SDL_mixer. It is adequate for now, but a much better alternative would be to use openAL, www.openal.org
